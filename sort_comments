#! /usr/bin/perl

use strict;
use warnings;
use YAML::XS;

chdir "CHANGEME/path/to/blog/comments" || die "no comment dir\n";

opendir D,'all';
my %files=map {$_ => 'unclassified'} grep !/^\./,readdir D;
closedir D;

foreach my $mode (qw(good spam unknown)) {
  opendir D,$mode;
  foreach my $link (grep !/^\./,readdir D) {
    $link =~ s/.*\///;
    if (exists $files{$link}) {
      $files{$link}=$mode;
    } else {
      die "Dangling link $mode/$link\n";
    }
  }
  closedir D;
}

my %pass;
{
  my $y;
  open (I,'<pass.yaml');
  my $data=join('',<I>);
  close I;
  $y=Load($data) || die "Can't decode\n";
  foreach my $mode (keys %{$y}) {
    map {$pass{$mode}{$_}=1} @{$y->{$mode}};
  }
}

my $fail;
{
  my $y;
  open (I,'<fail.yaml');
  my $data=join('',<I>);
  close I;
  $y=Load($data) || die "Can't decode\n";
  $fail=join('|',@{$y});
}


foreach my $f (keys %files) {
  if ($files{$f} eq 'unclassified') {
    my $class='unknown';
    open I,'<',"all/$f";
    my $state=0;
    my %h;
    while (<I>) {
      chomp;
      if ($state==0 && /^([-A-Za-z]+):\s+(.*)/) {
        my ($k,$v)=($1,$2);
        $h{$k}=$v;
        if (exists $pass{$k}{lc($v)}) {
          $class='good';
          open OUT,'>','../rebuild';
          close OUT;
          last;
        }
      } elsif ($state==0 && $_ eq '') {
        $state=1;
      } elsif ($state==1 && /($fail)/i) {
        $class='spam';
        last;
      }
    }
    if ($class eq 'unknown' &&
        ($h{Name} =~ /^http/ || length($h{Name})>50)) {
      $class='spam';
    }
    if ($class eq 'unknown' &&
        $h{Name} =~ /^[A-Z][a-z]{5}\d{3}$/ &&
        $h{Mail} =~ /^[a-z]{6}\d{3}\@gmail.com$/) {
      $class='spam';
    }
    close I;
    if ($class ne 'spam') {
      if ($class eq 'unknown') {
        print '*';
      }
      print "$h{Name} $f\n";
    }
    chdir $class;
    symlink "../all/$f",$f;
    chdir '..';
  }
}
